import "./chunk-3YG4HVQA.js";
import {
  SvelteComponentDev,
  add_location,
  assign,
  children,
  claim_element,
  compute_rest_props,
  detach_dev,
  dispatch_dev,
  element,
  exclude_internal_props,
  get_spread_update,
  init,
  insert_hydration_dev,
  noop,
  safe_not_equal,
  set_attributes,
  toggle_class,
  validate_slots
} from "./chunk-JVJWPZ6M.js";
import "./chunk-ZJ46KODL.js";
import "./chunk-ZC22LKFR.js";

// node_modules/carbon-components-svelte/src/UIShell/SideNavDivider.svelte
var file = "node_modules/carbon-components-svelte/src/UIShell/SideNavDivider.svelte";
function create_fragment(ctx) {
  let li;
  let li_levels = [
    { role: "separator" },
    /*$$restProps*/
    ctx[0]
  ];
  let li_data = {};
  for (let i = 0; i < li_levels.length; i += 1) {
    li_data = assign(li_data, li_levels[i]);
  }
  const block = {
    c: function create() {
      li = element("li");
      this.h();
    },
    l: function claim(nodes) {
      li = claim_element(nodes, "LI", { role: true });
      children(li).forEach(detach_dev);
      this.h();
    },
    h: function hydrate() {
      set_attributes(li, li_data);
      toggle_class(li, "bx--side-nav__divider", true);
      add_location(li, file, 0, 0, 0);
    },
    m: function mount(target, anchor) {
      insert_hydration_dev(target, li, anchor);
    },
    p: function update(ctx2, [dirty]) {
      set_attributes(li, li_data = get_spread_update(li_levels, [{ role: "separator" }, dirty & /*$$restProps*/
      1 && /*$$restProps*/
      ctx2[0]]));
      toggle_class(li, "bx--side-nav__divider", true);
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(li);
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance($$self, $$props, $$invalidate) {
  const omit_props_names = [];
  let $$restProps = compute_rest_props($$props, omit_props_names);
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("SideNavDivider", slots, []);
  $$self.$$set = ($$new_props) => {
    $$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
    $$invalidate(0, $$restProps = compute_rest_props($$props, omit_props_names));
  };
  return [$$restProps];
}
var SideNavDivider = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "SideNavDivider",
      options,
      id: create_fragment.name
    });
  }
};
var SideNavDivider_default = SideNavDivider;
export {
  SideNavDivider_default as default
};
//# sourceMappingURL=carbon-components-svelte_src_UIShell_SideNavDivider__svelte.js.map
